@use 'sizes';
@layer design-system {
  :where(:root) {
    /* ===== WRAPPER VARIANT ===== */
    --wrapper-content-inline-size: var(--content-size-10);
    --wrapper-inline-offset: var(--size-5);
    --wrapper-inline-size: min(var(--wrapper-content-inline-size), 100% - var(--wrapper-inline-offset));
  
    /* ===== GRID LAYOUT VARIANT ===== */
    --layout-inline-offset: var(--size-5);
    --layout-content-inline-size: var(--content-size-7);
    --layout-breakout-max-inline-size: var(--content-size-9);
    --layout-breakout-inline-size: calc( (var(--layout-breakout-max-inline-size) - var(--layout-content-inline-size)) / 2);
  
    /* ===== UNIVERSAL LAYOUT PROPS ===== */
    --grid-cell: [stack] 1fr / [stack] 1fr;
    --grid-cell-name: stack;
    --grid-ram: repeat(auto-fit, minmax(min(0, 100%), 1fr));
    --grid-holy-grail: auto 1fr auto / auto 1fr auto;
  
    /* ===== ADAPTIVE GRID CONTAINER VARIANT ===== */
    --grid_adapt_mixin-viewport_context: 100svi;
    --grid_adapt_mixin-container_context: 100%;
    --grid_adapt_mixin-context: var(--grid_adapt_mixin-viewport_context);
    --grid_adapt_mixin-break_1: var(--content-size-8);
    --above-break_1-columns: 5;
    --grid_adapt_mixin-break_2: 55.885ch;
    --above-break_2-columns: 2;
    --grid_adapt_mixin: repeat(
      auto-fill,
      minmax(
        clamp(
          clamp(
            calc(100% / calc(var(--above-break_1-columns) + 1) + 0.1%),
            calc(calc(var(--grid_adapt_mixin-break_1) - var(--grid_adapt_mixin-context)) * 1e5),
            calc(100% / calc(var(--above-break_2-columns) + 1) + 0.1%)
          ),
          calc(calc(var(--grid_adapt_mixin-break_2) - var(--grid_adapt_mixin-context)) * 1e5),
          100%
        ),
        1fr
      )
    );
  }
}