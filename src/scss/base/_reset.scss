@use '../abstracts/' as *;
@layer reset {
  *,
  ::before,
  ::after {
    box-sizing: border-box;
  }
  :where(:root) {
    view-transition-name: none;
    --transition-focus: outline-offset 145ms var(--ease-2);
    @supports (transition-timing-function: linear(0, 1)) {
      --transition-focus: outline-offset 145ms var(--ease-spring-3);
    }
    & {
      interpolate-size: allow-keywords;
    }
  }
  :focus-visible {
		outline-color: oklch(var(--link-color));
	}
  :where(:not(:active):focus-visible) {
    outline-offset: 5px;
  }
  @include motion-ok {
    :where(:focus-visible) {
      transition: var(--transition-focus);
    }
    :where(:not(:active):focus-visible) {
      transition-duration: .25s;
    }
  }
  :where(:not(dialog)) {
    margin: 0;
    padding: 0;
  }
  :where(:not(fieldset, progress, meter)) {
		border-width: 0;
		border-style: solid;
		background-origin: border-box;
		background-repeat: no-repeat;
	}
  :where(html) {
    --isLTR: 1;
		--isRTL: -1;
    &:dir(rtl) {
      --isLTR: -1;
			--isRTL: 1;
    }
    & {
      view-timeline: document-timeline;
      block-size: 100%;
      hanging-punctuation: first last;
      -webkit-text-size-adjust: none;
    }
    @include motion-ok {
      scroll-behavior: smooth;
    }
    @include motion-not-ok {
      html:focus-within {
        scroll-behavior: auto;
      }
      *,
			*::before,
			*::after {
        animation-duration: 0.01ms !important;
				animation-iteration-count: 1 !important;
				transition-duration: 0.01ms !important;
				scroll-behavior: auto !important;
      }
    }
  }
  :where(body) {
    min-block-size: 100vh;
    min-block-size: 100dvb;
    min-block-size: 100svb;
    text-rendering: optimizeSpeed;
    -webkit-font-smoothing: antialiased;
  }
  :where(
		header,
		main,
		section,
		article,
		footer) {
			container-type: inline-size;
	}
  :where(ul, ol, menu)[role='list'] {
		list-style: none;
		margin: 0;
		padding: 0;
	}
  :where(h1, h2, h3, h4, h5, h6) {
    line-height: var(--font-line-height-3);
    font-weight: var(--font-weight-700);
    text-wrap: balance;
  }
  :where(p, li) {
    text-wrap: pretty;
  }
  :where(
    a[href],
    area,
    button,
    input:not(
      [type='text'],
      [type='email'],
      [type='number'],
      [type='password'],
      [type=''],
      [type='tel'],
      [type='url']
    ),
    label[for],
    select,
    summary,
    [tabindex]:not([tabindex*='-'])
  ) {
    cursor: pointer;
  }
  :where(
    a[href],
    area,
    button,
    input,
    label[for],
    select,
    summary,
    textarea,
    [tabindex]:not([tabindex*='-'])
  ) {
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }
  :where(input, button, textarea, select) {
		font: inherit;
		font-size: inherit;
		letter-spacing: inherit;
		word-spacing: inherit;
	}
  :where(a) {
    &:where([href]) {
      color: inherit;
      text-decoration: none;
    }
    &:where(:visited) {
      color: oklch(var(--link-color));
      text-decoration-color: oklch(var(--link-visited-color));
    }
    &:where(:not(:hover)) {
      text-decoration: inherit;
    }
    &:where(:not([class])) {
      text-decoration-skip-ink: auto;
    }
  }
  :where(table) {
    border-collapse: collapse;
  }
  :where([hidden]) {
    display: none;
  }
  :where(img, svg, video, canvas, audio, iframe, embed, object) {
    @include d-block;
  }
  :where(img, svg, video) {
    block-size: auto;
    max-inline-size: 100%;
    object-fit: cover;
  }
  :where(svg) {
    fill: currentColor;
  }
  ::placeholder {
		color: oklch(var(--text-color-2) / .75);
		opacity: 0.75;
	}
}